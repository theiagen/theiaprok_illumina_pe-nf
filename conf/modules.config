/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${meta.id}/${task.process.tokenize(':')[-1].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: PROKKA {
        ext.args = '--compliant' 
    }

    withName: 'RAW_CHECK_READS' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/read_screening/raw" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'CLEAN_CHECK_READS' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/read_screening/clean" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'FASTQ_SCAN_PE_RAW' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/read_qc/fastq_scan/raw" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'FASTQ_SCAN_PE_CLEAN' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/read_qc/fastq_scan/clean" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'FASTQC_RAW' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/read_qc/fastqc/raw" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'FASTQC_CLEAN' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/read_qc/fastqc/clean" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'TRIMMOMATIC_PE' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/read_processing/trimmomatic" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'FASTP_PE' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/read_processing/fastp" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'BBDUK' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/read_processing/bbduk" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'SPADES' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/assembly" },
            mode: params.publish_dir_mode,
            pattern: '*.{fasta,gfa,log}'
        ]
    }

    withName: 'SKESA' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/assembly" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }

    withName: 'MEGAHIT' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/assembly" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'QUAST' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/assembly_qc/quast" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'BUSCO' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/assembly_qc/busco" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'GAMBIT' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/taxon_id/gambit" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'KMERFINDER_BACTERIA' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/taxon_id/kmerfinder" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'TS_MLST' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/mlst" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
  
    withName: 'AMRFINDER_PLUS_NUC' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/amr/amrfinderplus" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'RESFINDER' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/amr/resfinder" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'ABRICATE' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/amr/abricate" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'PLASMIDFINDER' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/plasmids" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'PROKKA' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/annotation/prokka" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'BAKTA' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/annotation/bakta" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'CG_PIPELINE_RAW' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/read_qc/cg_pipeline/raw" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    
    withName: 'CG_PIPELINE_CLEAN' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/read_qc/cg_pipeline/clean" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
}
