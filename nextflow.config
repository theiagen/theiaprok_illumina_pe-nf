/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    theiaprok Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                      = null
    outdir                     = './results'

    // Alternative input options
    samplename      = null
    read1           = null
    read2           = null

    // entrypoint options
    paired_end            = true
    ont_data              = false
    assembly_only         = false

    // Read screening parameters
    skip_screen             = false
    min_reads              = 7472
    min_basepairs          = 2241820
    min_genome_length      = 100000
    max_genome_length      = 18040666
    min_coverage           = 10
    min_proportion         = 40

    // QC Options 
    genome_length            = null
    trim_min_length          = 50
    trim_quality_min_score   = 20
    trim_window_size         = 4
    // Tool selection for filtering and QC
    read_processing          = 'trimmomatic'  // Options: 'trimmomatic', 'fastp'
    read_qc                  = 'fastqc'       // Options: 'fastqc', 'fastq_scan'
    workflow_series          = 'theiaprok'     // Options: 'theiaprok' for now
    // Optional contamination flags
    call_midas               = false
    call_kraken              = true
    // Reference files for cleaning
    adapters                 = null
    phix                     = null
    // Tool-specific arguments per phb
    trimmomatic_args         = '-phred33'
    fastp_args               = '--detect_adapter_for_pe -g -5 20 -3 20'
     // Assembly parameters
    assembler                  = 'skesa'  // Options: spades, skesa, megahit
    min_contig_length          = 200
    kmers                      = null
    assembler_options          = null
    cg_pipe_opts               = null
    quast_min_contig_length    = 500
    // SPAdes specific
    spades_type                = 'isolate'
    // Pilon polishing
    call_pilon                 = false
    pilon_min_mapping_quality  = 60
    pilon_min_base_quality     = 3
    pilon_min_depth            = 0.25
    pilon_fix                  = 'bases'  // Options: all, snps, indels, gaps, bases
    // Contig filtering
    run_filter_contigs                    = true
    filter_contigs_min_length             = 200
    filter_contigs_min_coverage           = 2.0
    filter_contigs_skip_length_filter     = false
    filter_contigs_skip_coverage_filter   = false
    filter_contigs_skip_homopolymer_filter = false
    // Module options
    perform_characterization = true
    call_ani             = false
    call_kmerfinder      = false
    call_resfinder       = false
    call_plasmidfinder   = true
    call_abricate        = false
    abricate_db          = "vfdb"
    genome_annotation    = "prokka" // options: "prokka" or "bakta"
    bakta_db             = "full"    // options: "light", "full", or path to custom DB
    expected_taxon       = null     // optional: provide expected organism

    // Defualt dbs
    midas_db             = "latch://tgn-latch-dev-database-2025.mount/midas/midas_db_v1.2.tar.gz"
    kraken_db            = "latch://tgn-latch-dev-database-2025.mount/kraken2/terra_databases_kraken2_kraken2.kalamari_5.1.tar"
    kmerfinder_db        = "latch://tgn-latch-dev-database-2025.mount/kmerfinder/kmerfinder_bacteria_20230911.tar.gz"
    gambit_db_genomes    = "latch://tgn-latch-dev-database-2025.mount/gambit/gambit-metadata-2.0.1-20250505.gdb"
    gambit_db_signatures = "latch://tgn-latch-dev-database-2025.mount/gambit/gambit-signatures-2.0.1-20250505.gs"
    bakta_db_path        = "latch://tgn-latch-dev-database-2025.mount/bakta/"
    resfinder_db_res     = null
    resfinder_db_point   = null
    plasmidfinder_db     = null
    plasmidfinder_db_path  = null
    plasmidfinder_method_path = null

    // AMRFinderPlus Options
    amrfinder_min_percent_identity = 0.9
    amrfinder_min_percent_coverage = 0.5
    amrfinder_detailed_drug_class = false
    amrfinder_hide_point_mutations = false
    amrfinder_separate_betalactam_genes = false
    // ResFinder parameters
    resfinder_organism = null
    resfinder_acquired = false
    resfinder_min_percent_coverage = 0.5
    resfinder_min_percent_identity = 0.9
    resfinder_call_pointfinder = false
    // PlasmidFinder parameters
    plasmidfinder_min_percent_coverage = 0.60
    plasmidfinder_min_percent_identity = 0.90
    // MLST parameters
    mlst_nopath = false
    mlst_scheme = null
    mlst_min_percent_identity = 95
    mlst_min_percent_coverage = 10
    mlst_minscore = 50
    // STXTyper Options
    stxtyper_enable_debugging = false
    // Species-specific options
    call_stxtyper       = false
    call_poppunk        = false
    run_amr_search      = false

    // Try this out for run merlin magic
    run_merlin_magic             = true

    // Species spcific options

    // Acinetobacter baumannii - KAPTIVE
    kaptive_start_end_margin = 10
    kaptive_min_percent_coverage = 90.0
    kaptive_min_percent_identity = 80.0
    kaptive_low_gene_percent_identity = 95.0
    
    // Acinetobacter baumannii - ABRICATE
    abricate_abaum_min_percent_identity = 80
    abricate_abaum_min_percent_coverage = 80
    
    // Listeria - LISSERO
    lissero_min_percent_identity = 95.0
    lissero_min_percent_coverage = 95.0
    
    // E. coli/Shigella - ECTYPER
    ectyper_o_min_percent_identity = 90
    ectyper_h_min_percent_identity = 95
    ectyper_o_min_percent_coverage = 90
    ectyper_h_min_percent_coverage = 50
    ectyper_verify = false
    ectyper_print_alleles = false
    
    // E. coli/Shigella - VIRULENCEFINDER
    virulencefinder_database = "virulence_ecoli"
    virulencefinder_min_percent_coverage = 0.60
    virulencefinder_min_percent_identity = 0.90
    
    // Mycobacterium tuberculosis - TBP_PARSER
    tbp_parser_config               = null
    tbp_parser_sequencing_method    = null
    tbp_parser_operator             = null
    tbp_parser_min_depth            = 10
    tbp_parser_min_frequency        = 0.1
    tbp_parser_min_read_support     = 10
    tbp_parser_min_percent_coverage = 100
    tbp_parser_coverage_regions_bed = null
    tbp_parser_add_cycloserine_lims = false
    tbp_parser_debug                = true
    tbp_parser_tngs                 = false
    tbp_parser_rrs_frequncy         = 0.1
    tbp_parser_rrs_read_support     = 10
    tbp_parser_rr1_frequency        = 0.1
    tbp_parser_rr1_read_support     = 10
    tbp_parser_rpob499_frequency    = 0.1
    tbp_parser_etha237_frequency    = 0.1
    tbp_parser_expert_rule_regions_bed = null
    
    // Staphylococcus aureus - SPATYPER
    spatyper_do_enrich = false
    
    // Streptococcus pneumoniae - PBPTYPER
    pbptyper_database = []
    pbptyper_min_percent_identity = 95
    pbptyper_min_percent_coverage = 95
    
    // Streptococcus pneumoniae - PopPUNK
    poppunk_gps_db_url = "https://gps-project.cog.sanger.ac.uk/GPS_6.tar.gz"
    poppunk_gps_external_clusters_url = "https://gps-project.cog.sanger.ac.uk/GPS_v6_external_clusters.csv"
    
    // Streptococcus pyogenes - EMMTYPER
    emmtyper_wf = "blast"
    emmtyper_cluster_distance = 500
    emmtyper_min_percent_identity = 95
    emmtyper_culling_limit = 5
    emmtyper_mismatch = 4
    emmtyper_align_diff = 5
    emmtyper_gap = 2
    emmtyper_min_perfect = 15
    emmtyper_min_good = 15
    emmtyper_max_size = 2000
    
    // Haemophilus influenzae - HICAP
    hicap_min_gene_percent_coverage = 0.80
    hicap_min_gene_depth = 0.70
    hicap_min_gene_length = 60
    hicap_min_gene_percent_identity = 0.80
    
    // Haemophilus influenzae - SRST2
    srst2_min_percent_coverage = 90
    srst2_max_divergence = 10
    srst2_min_depth = 5
    srst2_min_edge_depth = 2
    srst2_gene_max_mismatch = 10
    
    // Vibrio - ABRICATE
    abricate_vibrio_min_percent_identity = 80
    abricate_vibrio_min_percent_coverage = 80

    vibecheck_vibrio_barcodes = null

    // Boilerplate options
    publish_dir_mode             = 'copy'
    email                        = null
    email_on_fail                = null
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null
    help                         = false
    help_full                    = false
    show_hidden                  = false
    version                      = false
    trace_report_suffix          = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')// Config options
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/'
    // Schema validation default options
    validate_params            = true
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
        process {
            resourceLimits = [
                memory: 8.GB,
                cpus  : 4,
                time  : 1.h
            ]
        }
    }
    gpu {
        docker.runOptions       = '-u $(id -u):$(id -g) --gpus all'
        apptainer.runOptions    = '--nv'
        singularity.runOptions  = '--nv'
    }
    test      { includeConfig 'conf/test.config' 
                params.input = "$projectDir/test-data/samplesheet.csv"
    }
    test_full { includeConfig 'conf/test_full.config' 
                params.input = "$projectDir/test-data/samplesheet.csv"
    }

}
// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = [
    "bash",
    "-C",         // No clobber - prevent output redirection from overwriting files.
    "-e",         // Exit if a tool returns a non-zero status/exit code
    "-u",         // Treat unset variables and parameters as an error
    "-o",         // Returns the status of the last command to exit..
    "pipefail"    //   ..with a non-zero status or zero if all successfully execute
]

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

plugins {
    id 'nf-theia@0.2.3'
}

theia {
    fileReport {
        enabled = true
        collate = true
        workdir = true
        collatedFileName = "collated-workflow-files.json"
    }
}