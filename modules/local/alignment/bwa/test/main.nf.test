nextflow_process {
    name "Test Process BWA_MEM"
    script "../main.nf"
    process "BWA_MEM"
    
    test("bwa_mem - test") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test_sample' ],
                    [
                        file(params.pipelines_testdata_base_path + "genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_1.fastq.gz", checkIfExists: true),
                        file(params.pipelines_testdata_base_path + "genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_2.fastq.gz", checkIfExists: true)
                    ],
                    [
                        file(params.pipelines_testdata_base_path + "genomics/prokaryotes/bacteroides_fragilis/illumina/fasta/test1.contigs.fa.gz", checkIfExists: true)
                    ]
                ]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                {  assert snapshot(
                    process.out.bam,
                    process.out.bai,
                    process.out.fastq_1,
                    process.out.fastq_2,
                    process.out.unaligned_1,
                    process.out.unaligned_2,
                    process.out.versions,
                    ).match() }
            )
        }
    }
    
    test("bwa_mem - stub") {
        options "-stub"
        when {
            process {
                """
                input[0] = [
                    [ id:'test_sample' ],
                    [
                        file(params.pipelines_testdata_base_path + "genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_1.fastq.gz", checkIfExists: true),
                        file(params.pipelines_testdata_base_path + "genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_2.fastq.gz", checkIfExists: true)
                    ],
                    [
                        file(params.pipelines_testdata_base_path + "genomics/prokaryotes/bacteroides_fragilis/illumina/fasta/test1.contigs.fa.gz", checkIfExists: true)
                    ]
                ]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}