nextflow_process {
    name "Test Process KAPTIVE"
    script "../main.nf"
    process "KAPTIVE"

    // Grabbing staph b test asm
    test("kaptive - prokaryote assembly") {
        setup {
            run("GUNZIP") {
                script "../../../../../nf-core/gunzip/main.nf"
                process {
                    """
                    input[0] = [
                        [id:'test_sample'],
                        [file('https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/022/268/055/GCA_022268055.1_PDT000434809.1/GCA_022268055.1_PDT000434809.1_genomic.fna.gz', checkIfExists: true)]
                    ]
                    """
                }
            }
        }
        when {
            process {
                """
                input[0] = GUNZIP.out.gunzip
                input[1] = 10
                input[2] = 90
                input[3] = 80
                input[4] = 95
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.k_table, 
                    process.out.oc_table, 
                    process.out.k_match, 
                    process.out.k_type, 
                    process.out.k_confidence, 
                    process.out.k_expected_inside_count, 
                    process.out.k_expected_inside_genes, 
                    process.out.k_expected_outside_count, 
                    process.out.k_expected_outside_genes, 
                    process.out.k_other_inside_count, 
                    process.out.k_other_inside_genes, 
                    process.out.k_other_outside_count, 
                    process.out.k_other_outside_genes, 
                    process.out.oc_match, 
                    process.out.oc_type, 
                    process.out.oc_confidence, 
                    process.out.oc_expected_inside_count, 
                    process.out.oc_expected_inside_genes, 
                    process.out.oc_expected_outside_count, 
                    process.out.oc_expected_outside_genes, 
                    process.out.oc_other_inside_count, 
                    process.out.oc_other_inside_genes, 
                    process.out.oc_other_outside_count, 
                    process.out.oc_other_outside_genes,
                    process.out.versions
                ).match() }
            )
        }
    }

    test("kaptive - prokaryote assembly - stub") {
        options "-stub"
        when {
            process {
                """
                input[0] = Channel.of([
                    [ id:'test_sample' ],
                    file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/genome/genome.fna.gz', checkIfExists: true)
                ])
                input[1] = 10
                input[2] = 90
                input[3] = 80
                input[4] = 95
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}