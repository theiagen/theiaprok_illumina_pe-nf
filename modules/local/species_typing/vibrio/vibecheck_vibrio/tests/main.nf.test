// TODO nf-core: Once you have added the required tests, please run the following command to build this file:
// nf-core modules test vibecheckvibrio
nextflow_process {

    name "Test Process VIBECHECKVIBRIO"
    script "../main.nf"
    process "VIBECHECK_VIBRIO"
    config "./nextflow.config"

    tag "modules"
    tag "vibecheck_vibrio"

    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used
    test("vibrio - reads") {

        // TODO nf-core: If you are created a test for a chained module
        // (the module requires running more than one process to generate the required output)
        // add the 'setup' method here.
        // You can find more information about how to use a 'setup' method in the docs (https://nf-co.re/docs/contributing/modules#steps-for-creating-nf-test-for-chained-modules).

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id:'test_sample' ],
                    [
                        file(params.pipelines_testdata_base_path + "vibrio/data/vib_1.fastq.gz", checkIfExists: true),
                        file(params.pipelines_testdata_base_path + "vibrio/data/vib_2.fastq.gz", checkIfExists: true)
                    ]
                ])
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used but keep the " - stub" suffix.
    test("vibrio - reads - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id:'test_sample' ],
                    [
                        file(params.pipelines_testdata_base_path + "vibrio/data/vib_1.fastq.gz", checkIfExists: true),
                        file(params.pipelines_testdata_base_path + "vibrio/data/vib_2.fastq.gz", checkIfExists: true)
                    ]
                ])
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
                //TODO nf-core: Add all required assertions to verify the test output.
            )
        }

    }

}
