nextflow_process {
    name "Test Process BUSCO"
    script "../main.nf"
    process "BUSCO"
    config "./nextflow.config"
    

    // Just focus on prokaryotes for this test
    test("busco - prokaryote assembly") {
        setup {
            run("GUNZIP") {
                script "../../../../../nf-core/gunzip/main.nf"
                process {
                    """
                    input[0] = [
                        [id:'test_sample'],
                        [file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/genome/genome.fna.gz', checkIfExists: true)]
                    ]
                    """
                }
            }
        }
        when {
            process {
                """
                input[0] = GUNZIP.out.gunzip
                input[1] = false  // eukaryote = false (prokaryote)
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.busco_database,
                    process.out.busco_results,
                    process.out.versions
                ).match() }
            )
        }
    }

    test("busco - prokaryote assembly - stub") {
        options "-stub"
        when {
            process {
                """
                input[0] = Channel.of([
                    [ id:'test_sample' ],
                    file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/genome/genome.fna.gz', checkIfExists: true)
                ])
                input[1] = false  // eukaryote = false (prokaryote)
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}