// TODO nf-core: Once you have added the required tests, please run the following command to build this file:
// nf-core modules test animummer
nextflow_process {

    name "Test Process ANI_MUMMER"
    script "../main.nf"
    process "ANI_MUMMER"

    tag "modules"
    tag "animummer"

    // TODO ani perl script does not work.
    // test("single-contig - no-ref") {

    //     // TODO nf-core: If you are created a test for a chained module
    //     // (the module requires running more than one process to generate the required output)
    //     // add the 'setup' method here.
    //     // You can find more information about how to use a 'setup' method in the docs (https://nf-co.re/docs/contributing/modules#steps-for-creating-nf-test-for-chained-modules).

    //     when {
    //         process {
    //             """
    //             input[0] = [
    //                 [ id:'test_animummer' ],
    //                 file(params.modules_local_testdata_base_path + 'c.jejuni.fasta', checkIfExists: true),
    //             ]
    //             input[1] = [file(params.modules_local_testdata_base_path + 'c.fetus.fasta', checkIfExists: true)]
    //             """
    //         }
    //     }

    //     then {
    //         assertAll(
    //             { assert process.success },
    //             // { assert snapshot(process.out).match() }
    //             //TODO nf-core: Add all required assertions to verify the test output.
    //             // See https://nf-co.re/docs/contributing/tutorials/nf-test_assertions for more information and examples.
    //         )
    //     }

    // }

    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used but keep the " - stub" suffix.
    test("ANI_MUMMER - stub") {

        options "-stub"

        when {
            process {
                """
                // TODO nf-core: define inputs of the process here. Example:
                
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_local_testdata_base_path + 'c.jejuni.fasta', checkIfExists: true),
                ]
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
                //TODO nf-core: Add all required assertions to verify the test output.
            )
        }

    }

}
